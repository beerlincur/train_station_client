// ! IMPORTANT
// * Generated by node ./icon-generator - do not modify manually, run npm run icons
import PropTypes from 'prop-types'
import st from './Icon.module.css'

const CurrentPath = ({ name }) => {
  // console.log(`name: `, name)
  switch (name) {
    case 'arrow_back':
      return (
        <>
          <path d="M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z" />
        </>
      );
    case 'arrow_forward':
      return (
        <>
          <path d="M12 4L10.59 5.41L16.17 11H4V13H16.17L10.59 18.59L12 20L20 12L12 4Z" />
        </>
      );
    case 'arrow_right':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M12.6414 6.23213L18.6414 11.2321L18.6407 11.2323C18.8685 11.4226 19.0001 11.7041 19.0001 12.0009C19.0001 12.2977 18.8685 12.5792 18.6407 12.7695L12.6407 17.7695C12.2154 18.1121 11.594 18.0503 11.2444 17.6308C10.8948 17.2112 10.9462 16.5889 11.3598 16.2323L15.2391 13H6C5.44772 13 5 12.5523 5 12C5 11.4477 5.44772 11 6 11H15.2371L11.3598 7.76913C10.9354 7.41523 10.8782 6.78426 11.2321 6.35983C11.586 5.9354 12.217 5.87823 12.6414 6.23213Z"  />
        </>
      );
    case 'close':
      return (
        <>
          <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" />
        </>
      );
    case 'close_black':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M10.5814 11.9956L7.75285 9.16707C7.36233 8.77654 7.36233 8.14338 7.75285 7.75285C8.14338 7.36233 8.77654 7.36233 9.16707 7.75285L11.9956 10.5814L14.8241 7.75286C15.2146 7.36234 15.8478 7.36234 16.2383 7.75286C16.6288 8.14339 16.6288 8.77655 16.2383 9.16708L13.4098 11.9956L16.2381 14.8239C16.6287 15.2144 16.6287 15.8476 16.2381 16.2381C15.8476 16.6287 15.2144 16.6287 14.8239 16.2381L11.9956 13.4098L9.16722 16.2381C8.77669 16.6287 8.14353 16.6287 7.75301 16.2381C7.36248 15.8476 7.36248 15.2145 7.75301 14.8239L10.5814 11.9956Z" />
        </>
      );
    case 'completed':
      return (
        <>
          <path d="M15.8337 5.83301L7.91699 14.1663L4.16699 9.99967" stroke="#00BA34" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
        </>
      );
    case 'delete':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M19 8H16V7C15.9982 5.3439 14.6561 4.00182 13 4H11C9.3439 4.00182 8.00182 5.3439 8 7V8H5C4.44772 8 4 8.44772 4 9C4 9.55228 4.44772 10 5 10H6V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V10H19C19.5523 10 20 9.55228 20 9C20 8.44772 19.5523 8 19 8ZM10 7C10.0007 6.44801 10.448 6.00072 11 6H13C13.552 6.00072 13.9993 6.44801 14 7V8H10V7ZM8 18H16V10H8V18Z" />
        </>
      );
    case 'delivering':
      return (
        <>
          <path d="M6.66667 21C5.95942 21 5.28115 20.7155 4.78105 20.2092C4.28095 19.7028 4 19.0161 4 18.3C4 17.76 4.16 17.256 4.44444 16.833L9.33333 8.229V6.6C9.09759 6.6 8.87149 6.50518 8.70479 6.3364C8.53809 6.16761 8.44444 5.93869 8.44444 5.7V4.8C8.44444 4.32261 8.63175 3.86477 8.96514 3.52721C9.29854 3.18964 9.75073 3 10.2222 3H13.7778C14.2493 3 14.7015 3.18964 15.0349 3.52721C15.3683 3.86477 15.5556 4.32261 15.5556 4.8V5.7C15.5556 5.93869 15.4619 6.16761 15.2952 6.3364C15.1285 6.50518 14.9024 6.6 14.6667 6.6V8.229L19.5556 16.833C19.84 17.256 20 17.76 20 18.3C20 19.0161 19.719 19.7028 19.219 20.2092C18.7189 20.7155 18.0406 21 17.3333 21H6.66667ZM5.77778 18.3C5.77778 18.5387 5.87143 18.7676 6.03813 18.9364C6.20483 19.1052 6.43092 19.2 6.66667 19.2H17.3333C17.5691 19.2 17.7952 19.1052 17.9619 18.9364C18.1286 18.7676 18.2222 18.5387 18.2222 18.3C18.2222 18.111 18.16 17.931 18.0622 17.787L16.0267 14.223L13.7778 16.5L9.27111 11.937L5.93778 17.787C5.84 17.931 5.77778 18.111 5.77778 18.3ZM12.8889 10.2C12.6531 10.2 12.427 10.2948 12.2604 10.4636C12.0937 10.6324 12 10.8613 12 11.1C12 11.3387 12.0937 11.5676 12.2604 11.7364C12.427 11.9052 12.6531 12 12.8889 12C13.1246 12 13.3507 11.9052 13.5174 11.7364C13.6841 11.5676 13.7778 11.3387 13.7778 11.1C13.7778 10.8613 13.6841 10.6324 13.5174 10.4636C13.3507 10.2948 13.1246 10.2 12.8889 10.2Z" />
        </>
      );
    case 'directions_walk':
      return (
        <>
          <path d="M13.5 5.5C14.6 5.5 15.5 4.6 15.5 3.5C15.5 2.4 14.6 1.5 13.5 1.5C12.4 1.5 11.5 2.4 11.5 3.5C11.5 4.6 12.4 5.5 13.5 5.5ZM9.8 8.9L7 23H9.1L10.9 15L13 17V23H15V15.5L12.9 13.5L13.5 10.5C14.8 12 16.8 13 19 13V11C17.1 11 15.5 10 14.7 8.6L13.7 7C13.3 6.4 12.7 6 12 6C11.7 6 11.5 6.1 11.2 6.1L6 8.3V13H8V9.6L9.8 8.9Z" />
        </>
      );
    case 'domain':
      return (
        <>
          <path d="M12 7V3H2V21H22V7H12ZM6 19H4V17H6V19ZM6 15H4V13H6V15ZM6 11H4V9H6V11ZM6 7H4V5H6V7ZM10 19H8V17H10V19ZM10 15H8V13H10V15ZM10 11H8V9H10V11ZM10 7H8V5H10V7ZM20 19H12V17H14V15H12V13H14V11H12V9H20V19ZM18 11H16V13H18V11ZM18 15H16V17H18V15Z" />
        </>
      );
    case 'done':
      return (
        <>
          <path d="M9.00039 16.2L4.80039 12L3.40039 13.4L9.00039 19L21.0004 6.99998L19.6004 5.59998L9.00039 16.2Z" />
        </>
      );
    case 'drop':
      return (
        <>
          <path d="M22.936 10.0952L22.8953 10.0401L22.8872 10.024L19.19 4.53546L15.4927 10.024L15.485 10.0394L15.4439 10.0953C14.8507 10.8987 14.5371 11.8533 14.5371 12.8558C14.5371 15.4214 16.6244 17.5086 19.1899 17.5086C21.7555 17.5086 23.8427 15.4214 23.8427 12.8558C23.8428 11.8532 23.5292 10.8986 22.936 10.0952Z" /><path d="M19.1895 19.0939C15.7497 19.0939 12.9513 16.2955 12.9513 12.8558C12.9513 11.5187 13.3679 10.2446 14.1561 9.16995L16.5866 5.56191L12.8397 0L5.0332 11.5886C3.80581 13.2589 3.15723 15.2393 3.15723 17.3174C3.15723 22.6564 7.50081 27 12.8398 27C17.8986 27 22.063 23.1002 22.4863 18.1492C21.5291 18.7475 20.3991 19.0939 19.1895 19.0939Z" />
        </>
      );
    case 'edit':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M18.0219 5.87901C17.4593 5.3162 16.6961 5 15.9003 5C15.1044 5 14.3412 5.3162 13.7786 5.87901L5.293 14.3631C5.10543 14.5506 5.00003 14.805 5 15.0702V17.8984C5 18.4507 5.44772 18.8984 6 18.8984H8.829C9.09425 18.8985 9.34864 18.7931 9.5361 18.6054L18.0227 10.1208C19.1896 8.94752 19.1893 7.05186 18.0219 5.87901ZM16.6068 7.29261C16.9963 7.68337 16.9967 8.3154 16.6078 8.70671L15.9006 9.41391L14.4858 7.99951L15.1927 7.29261C15.5832 6.90216 16.2163 6.90216 16.6068 7.29261ZM7.0001 16.8984H8.4151L14.4864 10.8279L13.0715 9.41351L7.0001 15.4843V16.8984Z" />
        </>
      );
    case 'error':
      return (
        <>
          <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z" />
        </>
      );
    case 'file':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M6 4H18C18.5523 4 19 4.44772 19 5V19C19 19.5523 18.5523 20 18 20H6C5.44772 20 5 19.5523 5 19V5C5 4.44772 5.44772 4 6 4ZM7 18H17V6H7V18Z" /><path fillRule="evenodd" clipRule="evenodd" d="M10 10H14C14.5523 10 15 9.55228 15 9C15 8.44772 14.5523 8 14 8H10C9.44772 8 9 8.44772 9 9C9 9.55228 9.44772 10 10 10Z" /><path fillRule="evenodd" clipRule="evenodd" d="M10 14H14C14.5523 14 15 13.5523 15 13C15 12.4477 14.5523 12 14 12H10C9.44772 12 9 12.4477 9 13C9 13.5523 9.44772 14 10 14Z" />
        </>
      );
    case 'flag':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M19.7073 7.7069L16.4143 11L19.707 14.2929C19.993 14.5789 20.0785 15.009 19.9238 15.3826C19.769 15.7563 19.4044 16 19 16H10V21C10 21.5523 9.55228 22 9 22C8.44772 22 8 21.5523 8 21V7C8 6.44772 8.44772 6 9 6H19C19.4044 6.00001 19.769 6.24359 19.9238 6.61719C20.0786 6.99079 19.9932 7.42086 19.7073 7.7069ZM10 8V14H16.5861L14.2931 11.7071C13.9027 11.3166 13.9027 10.6835 14.2931 10.293L16.5861 8H10Z" />
        </>
      );
    case 'flag_outlined':
      return (
        <>
          <path d="M20.625 7.14844H14.625V4.5C14.625 4.08516 14.2898 3.75 13.875 3.75H4.3125V2.8125C4.3125 2.70937 4.22812 2.625 4.125 2.625H2.8125C2.70937 2.625 2.625 2.70937 2.625 2.8125V21.1875C2.625 21.2906 2.70937 21.375 2.8125 21.375H4.125C4.22812 21.375 4.3125 21.2906 4.3125 21.1875V15H10.125V17.6484C10.125 18.0633 10.4602 18.3984 10.875 18.3984H20.625C21.0398 18.3984 21.375 18.0633 21.375 17.6484V7.89844C21.375 7.48359 21.0398 7.14844 20.625 7.14844ZM4.3125 13.3125V5.4375H12.9375V13.3125H4.3125ZM19.6875 16.7109H11.8125V15H14.4375C14.5406 15 14.625 14.9156 14.625 14.8125V8.83594H19.6875V16.7109Z" />
        </>
      );
    case 'help':
      return (
        <>
          <path d="M16 8C16 10.1217 15.1571 12.1566 13.6569 13.6569C12.1566 15.1571 10.1217 16 8 16C5.87827 16 3.84344 15.1571 2.34315 13.6569C0.842855 12.1566 0 10.1217 0 8C0 5.87827 0.842855 3.84344 2.34315 2.34315C3.84344 0.842855 5.87827 0 8 0C10.1217 0 12.1566 0.842855 13.6569 2.34315C15.1571 3.84344 16 5.87827 16 8ZM5.496 6.033H6.321C6.459 6.033 6.569 5.92 6.587 5.783C6.677 5.127 7.127 4.649 7.929 4.649C8.615 4.649 9.243 4.992 9.243 5.817C9.243 6.452 8.869 6.744 8.278 7.188C7.605 7.677 7.072 8.248 7.11 9.175L7.113 9.392C7.11405 9.45761 7.14085 9.52017 7.18762 9.5662C7.23439 9.61222 7.29738 9.63801 7.363 9.638H8.174C8.2403 9.638 8.30389 9.61166 8.35078 9.56478C8.39766 9.51789 8.424 9.4543 8.424 9.388V9.283C8.424 8.565 8.697 8.356 9.434 7.797C10.043 7.334 10.678 6.82 10.678 5.741C10.678 4.23 9.402 3.5 8.005 3.5C6.738 3.5 5.35 4.09 5.255 5.786C5.25363 5.81829 5.25888 5.85053 5.27043 5.88072C5.28198 5.91091 5.29958 5.93841 5.32216 5.96155C5.34473 5.98468 5.3718 6.00296 5.40169 6.01524C5.43159 6.02753 5.46368 6.03357 5.496 6.033ZM7.821 12.476C8.431 12.476 8.85 12.082 8.85 11.549C8.85 10.997 8.43 10.609 7.821 10.609C7.237 10.609 6.812 10.997 6.812 11.549C6.812 12.082 7.237 12.476 7.822 12.476H7.821Z" />
        </>
      );
    case 'keyboard_arrow_down':
      return (
        <>
          <path d="M7.41 8.58997L12 13.17L16.59 8.58997L18 9.99997L12 16L6 9.99997L7.41 8.58997Z"  />
        </>
      );
    case 'keyboard_arrow_left':
      return (
        <>
          <path d="M15.41 16.59L10.83 12L15.41 7.41L14 6L8 12L14 18L15.41 16.59Z" />
        </>
      );
    case 'keyboard_arrow_right':
      return (
        <>
          <path d="M8.59009 16.59L13.1701 12L8.59009 7.41L10.0001 6L16.0001 12L10.0001 18L8.59009 16.59Z" />
        </>
      );
    case 'keyboard_arrow_up':
      return (
        <>
          <path d="M6.175 12.8416L10 9.02496L13.825 12.8416L15 11.6666L10 6.66663L5 11.6666L6.175 12.8416Z" />
        </>
      );
    case 'laborants':
      return (
        <>
          <g clipPath="url(#clip0_1947:3060)" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" opacity=".64"><path d="M16.1654 19.5V17.8333C16.1654 16.9493 15.8142 16.1014 15.1891 15.4763C14.5639 14.8512 13.7161 14.5 12.832 14.5H6.16536C5.28131 14.5 4.43346 14.8512 3.80834 15.4763C3.18322 16.1014 2.83203 16.9493 2.83203 17.8333V19.5"/><path d="M9.4974 11.1667C11.3383 11.1667 12.8307 9.67428 12.8307 7.83333C12.8307 5.99238 11.3383 4.5 9.4974 4.5C7.65645 4.5 6.16406 5.99238 6.16406 7.83333C6.16406 9.67428 7.65645 11.1667 9.4974 11.1667Z"/><path d="M21.1641 19.5V17.8333C21.1635 17.0948 20.9177 16.3773 20.4652 15.7936C20.0127 15.2099 19.3792 14.793 18.6641 14.6083"/><path d="M15.332 4.60834C16.049 4.79192 16.6846 5.20892 17.1384 5.7936C17.5922 6.37827 17.8386 7.09736 17.8386 7.8375C17.8386 8.57765 17.5922 9.29674 17.1384 9.88141C16.6846 10.4661 16.049 10.8831 15.332 11.0667"/></g>
        </>
      );
    case 'laboratory':
      return (
        <>
          <path d="M14.6667 8.16667V3.5H3V24.5H26.3333V8.16667H14.6667ZM7.66667 22.1667H5.33333V19.8333H7.66667V22.1667ZM7.66667 17.5H5.33333V15.1667H7.66667V17.5ZM7.66667 12.8333H5.33333V10.5H7.66667V12.8333ZM7.66667 8.16667H5.33333V5.83333H7.66667V8.16667ZM12.3333 22.1667H10V19.8333H12.3333V22.1667ZM12.3333 17.5H10V15.1667H12.3333V17.5ZM12.3333 12.8333H10V10.5H12.3333V12.8333ZM12.3333 8.16667H10V5.83333H12.3333V8.16667ZM24 22.1667H14.6667V19.8333H17V17.5H14.6667V15.1667H17V12.8333H14.6667V10.5H24V22.1667ZM21.6667 12.8333H19.3333V15.1667H21.6667V12.8333ZM21.6667 17.5H19.3333V19.8333H21.6667V17.5Z" />
        </>
      );
    case 'menu':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M7 8H17C17.5523 8 18 7.55228 18 7C18 6.44772 17.5523 6 17 6H7C6.44772 6 6 6.44772 6 7C6 7.55228 6.44772 8 7 8Z" /><path fillRule="evenodd" clipRule="evenodd" d="M17 11H7C6.44772 11 6 11.4477 6 12C6 12.5523 6.44772 13 7 13H17C17.5523 13 18 12.5523 18 12C18 11.4477 17.5523 11 17 11Z" /><path fillRule="evenodd" clipRule="evenodd" d="M17 16H7C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16Z" />
        </>
      );
    case 'notification':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M19.5911 4.02911C19.8896 3.95579 20.2053 4.02265 20.4485 4.21071C20.6916 4.40039 20.8335 4.69159 20.8333 4.99991V14.9999C20.8337 15.2652 20.7284 15.5198 20.5408 15.7074C20.3532 15.895 20.0986 16.0003 19.8333 15.9999C19.7517 15.9998 19.6704 15.9899 19.5911 15.9705L13.3578 14.4121L14.7815 18.6835C14.8832 18.9884 14.8321 19.3236 14.6443 19.5844C14.4564 19.8452 14.1547 19.9998 13.8333 19.9999H9.83329C9.40286 20 9.02075 19.7244 8.88509 19.3159L6.94829 13.5059C5.33013 12.6455 4.50706 10.7927 4.95344 9.01525C5.39983 7.23777 7.00063 5.99366 8.83329 5.99991H11.7083L19.5911 4.02911ZM10.8333 7.99991H8.83329C7.72872 7.99991 6.83329 8.89534 6.83329 9.99991C6.83329 11.1045 7.72872 11.9999 8.83329 11.9999H10.8333V7.99991ZM10.554 17.9999L9.22099 13.9999H11.1126L12.4456 17.9999H10.554ZM12.8333 12.2185L18.8333 13.7185V6.28101L12.8333 7.78101V12.2185Z"  opacity=".64"/>
        </>
      );
    case 'qr-code':
      return (
        <>
          <path d="M3.88845 2.77777C3.59377 2.77777 3.31115 2.89483 3.10278 3.10321C2.89441 3.31158 2.77734 3.5942 2.77734 3.88888V8.33333H8.3329V2.77777H3.88845ZM6.94401 6.94444H4.16623V4.16666H6.94401V6.94444Z" /><path d="M2.77734 21.1111C2.77734 21.4058 2.89441 21.6884 3.10278 21.8968C3.31115 22.1052 3.59377 22.2222 3.88845 22.2222H8.3329V16.6667H2.77734V21.1111ZM4.16623 18.0556H6.94401V20.8334H4.16623V18.0556Z" /><path d="M16.668 22.2222H21.1124C21.4071 22.2222 21.6897 22.1051 21.8981 21.8967C22.1065 21.6884 22.2235 21.4058 22.2235 21.1111V16.6666H16.668V22.2222ZM18.0569 18.0555H20.8346V20.8333H18.0569V18.0555Z" /><path d="M21.1124 2.77777H16.668V8.33333H22.2235V3.88888C22.2235 3.5942 22.1065 3.31158 21.8981 3.10321C21.6897 2.89483 21.4071 2.77777 21.1124 2.77777ZM20.8346 6.94444H18.0569V4.16666H20.8346V6.94444Z" /><path d="M13.8872 6.94443V5.55554H11.1094V8.33332H12.4983V6.94443H13.8872Z" /><path d="M8.33203 8.33331H9.72092V9.7222H8.33203V8.33331Z" /><path d="M9.72266 9.72223H12.5004V11.1111H9.72266V9.72223Z" /><path d="M13.8893 4.16666V5.55555H15.2782V2.77777H9.72266V5.55555H11.1115V4.16666H13.8893Z" /><path d="M2.77734 9.72223H4.16623V12.5H2.77734V9.72223Z" /><path d="M8.3329 11.1111V12.5H6.94401V9.72223H5.55512V12.5H4.16623V13.8889H2.77734V15.2778H5.55512V13.8889H6.94401V15.2778H8.3329V13.8889H9.72179V11.1111H8.3329Z" /><path d="M13.8889 11.1111H15.2778V12.5H16.6667V11.1111H18.0556V9.72224H15.2778V6.94446H13.8889V8.33335H12.5V9.72224H13.8889V11.1111Z" /><path d="M12.5004 20.8333H9.72266V22.2222H15.2782V20.8333H13.8893V19.4445H12.5004V20.8333Z" /><path d="M15.276 13.8889V12.5H13.8872V11.1111H12.4983V12.5H11.1094V13.8889H12.4983V15.2778H13.8872V13.8889H15.276Z" /><path d="M20.832 13.8889H22.2209V15.2778H20.832V13.8889Z" /><path d="M15.2773 13.8889H19.444V15.2778H15.2773V13.8889Z" /><path d="M20.8325 9.72223H19.4436V11.1111H18.0547V12.5H19.4436V13.8889H20.8325V12.5H22.2214V11.1111H20.8325V9.72223Z" /><path d="M13.8906 15.2778H15.2795V19.4444H13.8906V15.2778Z" /><path d="M9.72266 19.4445H11.1115V18.0556H12.5004V16.6667H11.1115V13.8889H9.72266V19.4445Z" />
        </>
      );
    case 'ready':
      return (
        <>
          <path fillRule="evenodd" clipRule="evenodd" d="M19.3743 7.37359L16.0813 10.6667L19.374 13.9596C19.66 14.2456 19.7455 14.6757 19.5908 15.0493C19.436 15.423 19.0714 15.6666 18.667 15.6667H9.66699V20.6667C9.66699 21.219 9.21928 21.6667 8.66699 21.6667C8.11471 21.6667 7.66699 21.219 7.66699 20.6667V6.66669C7.66699 6.1144 8.11471 5.66669 8.66699 5.66669H18.667C19.0714 5.66669 19.436 5.91027 19.5908 6.28387C19.7456 6.65748 19.6602 7.08754 19.3743 7.37359ZM9.66699 7.66669V13.6667H16.2531L13.9601 11.3738C13.5696 10.9833 13.5696 10.3502 13.9601 9.95969L16.2531 7.66669H9.66699Z" />
        </>
      );
    case 'refresh':
      return (
        <>
          <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4C7.58001 4 4.01001 7.58 4.01001 12C4.01001 16.42 7.58001 20 12 20C15.73 20 18.84 17.45 19.73 14H17.65C16.83 16.33 14.61 18 12 18C8.69001 18 6.00001 15.31 6.00001 12C6.00001 8.69 8.69001 6 12 6C13.66 6 15.14 6.69 16.22 7.78L13 11H20V4L17.65 6.35Z" />
        </>
      );
    case 'report':
      return (
        <>
          <path d="M15.73 3H8.27L3 8.27V15.73L8.27 21H15.73L21 15.73V8.27L15.73 3ZM19 14.9L14.9 19H9.1L5 14.9V9.1L9.1 5H14.9L19 9.1V14.9Z" /><path d="M12 17C12.5523 17 13 16.5523 13 16C13 15.4477 12.5523 15 12 15C11.4477 15 11 15.4477 11 16C11 16.5523 11.4477 17 12 17Z" /><path d="M11 7H13V14H11V7Z" />
        </>
      );
    case 'request':
      return (
        <>
          <g opacity=".64" fillRule="evenodd" clipRule="evenodd" ><path d="M19.5 4H9.5C8.94772 4 8.5 4.44772 8.5 5V8H5.5C4.94772 8 4.5 8.44772 4.5 9V17C4.50182 18.6561 5.8439 19.9982 7.5 20H17.5C19.1561 19.9982 20.4982 18.6561 20.5 17V5C20.5 4.44772 20.0523 4 19.5 4ZM6.5 10H8.5V17C8.5 17.5523 8.05228 18 7.5 18C6.94772 18 6.5 17.5523 6.5 17V10ZM17.5 18C18.0519 17.999 18.499 17.5519 18.5 17V6H10.5V17C10.4967 17.3415 10.4343 17.6798 10.3158 18H17.5Z"/><path d="M13.5 10H15.5C16.0523 10 16.5 9.55228 16.5 9C16.5 8.44772 16.0523 8 15.5 8H13.5C12.9477 8 12.5 8.44772 12.5 9C12.5 9.55228 12.9477 10 13.5 10Z"/><path d="M15.5 12H13.5C12.9477 12 12.5 12.4477 12.5 13C12.5 13.5523 12.9477 14 13.5 14H15.5C16.0523 14 16.5 13.5523 16.5 13C16.5 12.4477 16.0523 12 15.5 12Z"/></g>
        </>
      );
    case 'settings':
      return (
        <>
          <g opacity=".64" fillRule="evenodd" clipRule="evenodd" ><path d="M20.1675 12.0005C20.1908 13.1508 19.3285 14.1269 18.1841 14.2456C18.0904 14.2573 18.01 14.3185 17.9739 14.4057C17.9377 14.493 17.9512 14.5929 18.0091 14.6675C18.71 15.5681 18.6304 16.8497 17.8235 17.6567C17.0165 18.4636 15.7348 18.5432 14.8343 17.8423C14.7601 17.7834 14.6596 17.7699 14.5726 17.8071C14.4834 17.8412 14.4213 17.923 14.4126 18.0181C14.2934 19.1621 13.3174 20.0239 12.1675 20.0005C11.0172 20.0238 10.041 19.1615 9.92236 18.0171C9.91058 17.9234 9.84944 17.8432 9.7622 17.8071C9.67497 17.7709 9.57505 17.7844 9.50046 17.8423C8.60767 18.5679 7.30748 18.4872 6.51126 17.6568C5.68096 16.8604 5.60025 15.5604 6.32566 14.6675C6.38367 14.5928 6.39704 14.4926 6.36066 14.4053C6.32427 14.318 6.24376 14.257 6.14986 14.2456C5.00586 14.1264 4.14406 13.1504 4.16746 12.0005C4.14411 10.8502 5.00646 9.87403 6.15086 9.75537C6.24455 9.74359 6.32471 9.68245 6.36085 9.59521C6.397 9.50798 6.38356 9.40806 6.32566 9.33347C5.60007 8.4406 5.68088 7.1404 6.51146 6.34427C7.30776 5.51399 8.60777 5.43327 9.50066 6.15867C9.57365 6.22024 9.67569 6.23396 9.76236 6.19387C9.85155 6.15977 9.9136 6.07795 9.92236 5.98287C10.0415 4.83887 11.0175 3.97707 12.1675 4.00047C13.3178 3.97701 14.2941 4.83939 14.4128 5.98387C14.4218 6.07862 14.4838 6.16003 14.5728 6.19387C14.6599 6.23091 14.7602 6.21741 14.8345 6.15867C15.7273 5.43296 17.0276 5.51369 17.8238 6.34427C18.654 7.14059 18.7347 8.4406 18.0093 9.33347C17.9512 9.40818 17.9379 9.50831 17.9743 9.59563C18.0106 9.68294 18.0912 9.74396 18.1851 9.75537C19.3291 9.87452 20.1909 10.8505 20.1675 12.0005ZM16.1265 13.6399C16.4382 12.8879 17.13 12.3613 17.938 12.2612C18.0692 12.2445 18.1676 12.1333 18.1676 12.001C18.1676 11.8686 18.0692 11.757 17.938 11.7403C17.13 11.6401 16.4382 11.1136 16.1265 10.3615C15.8147 9.60944 15.9311 8.74787 16.4312 8.10547C16.4787 8.05875 16.5036 7.99372 16.4995 7.92721C16.4954 7.8607 16.4626 7.79925 16.4097 7.75877C16.3693 7.70566 16.3078 7.67276 16.2412 7.66863C16.1747 7.6645 16.1096 7.68956 16.063 7.73727C15.4206 8.23736 14.559 8.35372 13.8069 8.04196C13.0549 7.7302 12.5283 7.0384 12.4282 6.23047C12.4115 6.0992 12.2998 6.00082 12.1675 6.00082C12.0351 6.00082 11.9235 6.0992 11.9068 6.23047C11.8064 7.03831 11.2798 7.72996 10.5278 8.04161C9.77577 8.35326 8.91429 8.23684 8.27196 7.73677C8.22524 7.68925 8.16021 7.66432 8.0937 7.66845C8.02719 7.67257 7.96574 7.70534 7.92526 7.75827C7.87233 7.79875 7.83956 7.8602 7.83544 7.92671C7.83131 7.99322 7.85624 8.05825 7.90376 8.10497C8.40383 8.7473 8.52025 9.60878 8.2086 10.3608C7.89695 11.1128 7.2053 11.6394 6.39746 11.7398C6.26619 11.7565 6.16781 11.8681 6.16781 12.0005C6.16781 12.1328 6.26619 12.2445 6.39746 12.2612C7.20504 12.3617 7.89639 12.8883 8.20792 13.6401C8.51945 14.392 8.40315 15.2532 7.90336 15.8955C7.85584 15.9422 7.83091 16.0072 7.83504 16.0737C7.83916 16.1402 7.87193 16.2017 7.92486 16.2422C7.96494 16.2957 8.0265 16.3289 8.09324 16.3331C8.15998 16.3372 8.22517 16.3118 8.27156 16.2637C8.66593 15.9537 9.15274 15.7847 9.65436 15.7837C9.95414 15.784 10.2509 15.8438 10.5275 15.9595C11.2831 16.2667 11.8116 16.9608 11.9068 17.771C11.9235 17.9022 12.0351 18.0006 12.1675 18.0006C12.2998 18.0006 12.4115 17.9022 12.4282 17.771C12.5283 16.963 13.0549 16.2712 13.8069 15.9595C14.559 15.6477 15.4206 15.7641 16.063 16.2642C16.1674 16.3453 16.316 16.336 16.4095 16.2425C16.503 16.149 16.5123 16.0004 16.4312 15.896C15.9311 15.2536 15.8147 14.392 16.1265 13.6399Z"/><path d="M12.1674 10.0005C11.0629 10.0005 10.1674 10.8959 10.1674 12.0005C10.1674 13.1051 11.0629 14.0005 12.1674 14.0005C13.272 14.0005 14.1674 13.1051 14.1674 12.0005C14.166 10.8965 13.2714 10.002 12.1674 10.0005Z"/></g>
        </>
      );
    case 'spinner':
      return (
        <>
          <path d="M20.9963 16.3665C20.0494 18.3175 18.4939 19.9078 16.5643 20.8976C14.6347 21.8874 12.4356 22.2232 10.2986 21.8542C8.16152 21.4852 6.20234 20.4315 4.71639 18.8519C3.23043 17.2724 2.29824 15.2525 2.06035 13.097C1.82245 10.9414 2.29175 8.76689 3.39749 6.9013C4.50323 5.0357 6.18547 3.58012 8.19062 2.75399C10.1958 1.92787 12.4151 1.77597 14.5141 2.3212C16.6131 2.86644 18.478 4.07925 19.8276 5.7768" stroke="#C1BA12" strokeWidth="3" strokeLinecap="round"/>
        </>
      );
    default:
      return null;
  }
}

const DlIcon = ({ __TYPE, name, height, size, width, onClick, style, className, left, right, color, box = 24, ...rest }) => {
  
  return (
    <span className={`dl-icon ${st.icon}`} data-name={name}>
      <svg
        {...rest}
        height={height || size}
        width={width || size}
        onClick={onClick}
        style={style}
        className={className}
        fill={color}
        viewBox={`0 0 ${box} ${box}`}
      >
        <CurrentPath name={name} />
      </svg>
    </span>
  )
}

DlIcon.propTypes = {
  name: PropTypes.string.isRequired,
  color: PropTypes.string,
  className: PropTypes.string,
  box: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  onClick: PropTypes.func,
  style: PropTypes.object,
  __TYPE: PropTypes.string,
}

DlIcon.defaultProps = {
  color: 'currentColor',
  size: 24,
  __TYPE: "DlIcon"
}

export default DlIcon
